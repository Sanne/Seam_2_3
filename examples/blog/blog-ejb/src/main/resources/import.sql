insert into blog (name, description, locale, timezone, password) values ('JBoss Seam Blog', 'An example of a RESTful Seam application', 'en_AU', 'PST', 'tokyo')
insert into hitcount (blog_name, pageviews) values ('JBoss Seam Blog', 1000)
insert into blogentry (blog_name, id, title, excerpt, body, date) values ('JBoss Seam Blog', 'seamtext', 'Introducing Seam Text', null, 'Seam Text is a human-friendly language for formatting text in blogs, forums and wikis. It''s easy to enter text in *emphasis*, |monospace|, ~deleted~ or ^superscript^; you can easily enter links, lists, quotes and code blocks.'+char(10)+''+char(10)+'[This is a link.=>http://hibernate.org]'+char(10)+''+char(10)+'You can *not* enter HTML entities, even escaped: \&amp; \&lt; \&gt; \&quot; \&nbsp;'+char(10)+''+char(10)+'And even emoticons: ;) :-) :-{ ;-)'+char(10)+''+char(10)+'Here is an ordered list:'+char(10)+''+char(10)+'#JBoss'+char(10)+'#Seam'+char(10)+'#Hibernate'+char(10)+''+char(10)+'And this is an unordered list:'+char(10)+''+char(10)+'=jBPM'+char(10)+'=Drools'+char(10)+'=Ajax4JSF'+char(10)+'=Facelets'+char(10)+''+char(10)+'"Here is a quote from someone else"'+char(10)+''+char(10)+'`<p>Here is some code</p>`'+char(10)+''+char(10)+'And some plain HTML (restricted subset):'+char(10)+''+char(10)+'<table><tr><td>Foo</td><td>Bar</td></tr></table>', '2007-01-18 4:00')
insert into blogentry (blog_name, id, title, excerpt, body, date) values ('JBoss Seam Blog', 'book', 'Seam book excerpt on InfoQ', null, 'Michael and Thomas are writing [a book=>http://safari.oreilly.com/013241273X] about Seam for [O''Reilly=>http://www.oreillynet.com/], which is apparently the hottest selling item on Rough Cuts. InfoQ are running an [excerpt=>http://www.infoq.com/articles/jboss-seam] from the first chapter.'+char(10)+''+char(10)+'Meanwhile, Norman and I have been tearing our way through JIRA issues, and so 1.1.1 will be ready to go when I get back from vacation :-)', '2006-12-19 19:00')
insert into blogentry (blog_name, id, title, excerpt, body, date) values ('JBoss Seam Blog', 'roadmap11', 'Seam Roadmap', 'The [1.1 release=>http://blog.hibernate.org/cgi-bin/blosxom.cgi/2006/12/13#seam11-goes-ga] involved a lot of hard work in the guts of Seam, refactoring and fixing bugs, and working with \"tricky\" code that handles concerns like clustering and concurrency. Sure, there are many new features, but a lot of the real work is less user-visible. Now that this hard stuff is out of the way, it lets us add some interesting new stuff pretty quickly. Here''s a quick roadmap for the next few months:', 'The [1.1 release=>http://blog.hibernate.org/cgi-bin/blosxom.cgi/2006/12/13#seam11-goes-ga] involved a lot of hard work in the guts of Seam, refactoring and fixing bugs, and working with \"tricky\" code that handles concerns like clustering and concurrency. Sure, there are many new features, but a lot of the real work is less user-visible. Now that this hard stuff is out of the way, it lets us add some interesting new stuff pretty quickly. Here''s a quick roadmap for the next few months:'+char(10)+''+char(10)+'++++Spring integration package'+char(10)+''+char(10)+'We''re seeing regular requests from people who have existing DAOs and business logic written using the Spring Framework and want a migration path to Seam that lets them re-use this existing code unchanged. The planned Spring integration package will provide:'+char(10)+''+char(10)+'=injection of Spring beans into Seam components, using |@In|'+char(10)+'=access to the Spring beans in the EL'+char(10)+'=injection of Seam components into Spring beans using Spring XML'+char(10)+'=integration of the Spring DAO framework with Seam-managed persistence contexts'+char(10)+''+char(10)+'So, you''ll be able to easily call existing code written in Spring from your Seam component, JSF views, or jBPM process definitions, and have that code be able to take advantage of Seam''s conversation-scope persistence contexts. For the first time, you can have Spring code that isn''t vulnerable to |LazyInitializationException|!'+char(10)+'We''ll probably even go as far as:'+char(10)+''+char(10)+'=The ability to treat a Spring bean as a Seam |STATELESS JAVA\_BEAN| component, with a full stack of Seam interceptors'+char(10)+''+char(10)+'In which case a class can simultaneously be a Seam component and a Spring bean, the same way a class can simultaneously be a JSF managed beans, an EJB3 session bean, and a Seam component today.'+char(10)+''+char(10)+'++++Seam/Security'+char(10)+''+char(10)+'The most-requested feature in the Seam forums is security. Unfortunately, the security-related specifications did not go through the same process of self-examination and improvement in Java EE 5 that some other specifications (EJB) did, and so there is now a yawning hole, exactly where the platform should strongest. (Today the most inadequate specifications in Java are the portlet spec, the atrocious servlet spec, and any JSR relating to security.) Seam 1.1.5 will introduce Seam/Security, an extension to Seam that provides:'+char(10)+''+char(10)+'=a usable authentication layer'+char(10)+'=an ACL based permissioning model'+char(10)+'=an optional (customizable) user/role model'+char(10)+'=a totally cool (at least we think so) authorization mechanism based upon EL and Drools'+char(10)+''+char(10)+'The permissioning model lets you do \"row level\" security by writing rules that refer to the actual object instance that we are checking permissions for.'+char(10)+''+char(10)+'A subsequent release will also provide a console for administration of permissions, users/roles and rules. OK, I''m sure that sounds pretty vague now, but stay tuned.'+char(10)+''+char(10)+'++++Seam and iText'+char(10)+'Generating PDF is amazingly unsexy, but also incredibly useful. Seam 1.1.5 will provide a library of JSF controls for iText, letting you quickly create JSF templates that are capable of rendering PDF, Text and RTF. This will be as easy to use as:'+char(10)+''+char(10)+'`<it:document xmlns:f="http://java.sun.com/jsf/core"'+char(10)+'        xmlns:it="http://jboss.com/products/seam/pdf">'+char(10)+'    <it:paragraph>Hello World!</it:paragraph>'+char(10)+'</f:view>`'+char(10)+''+char(10)+'++++Integration of seam-gen with Hibernate Tools'+char(10)+''+char(10)+'Rails has made commandline tools popular for web development, and was the inspiration behind seam-gen. But I''m one of those recalcitrant IDE kinda guys, and I expect tooling to be properly integrated with Eclipse. We''ll be updating the GUI for Hibernate Tools to take advantage of the new templates in Seam 1.1, which will let you do everything you can do today using seam-gen, totally within Eclipse.'+char(10)+''+char(10)+'++++Seam/WS'+char(10)+''+char(10)+'We''ve been promising for months that Seam is the killer component model for SOA. Unfortunately, we got so bogged down in Seam 1.1 that we''re well behind on our original plan to deliver this in 2006.'+char(10)+''+char(10)+'Seam 1.2 will integrate Seam with the Java EE 5 Web Services layer and provide support for service conversations in its context model (I''ve not yet decided whether this calls for a new |SERVICE\_CONVERSATION| context, or whether it is just a different interpretation of the existing |CONVERSATION| context for a WS invocation.) Eventually, Seam/WS will also support service orchestration and conversation recovery via jBPM.'+char(10)+''+char(10)+'Actually, Seam/WS will just be one piece of a larger initiative to bring Seam to ESB and SOA environments, but at present this idea is mostly speculative.'+char(10)+''+char(10)+'Look for a beta release of Seam 1.2 in Q1.', '2006-12-14 15:29')
