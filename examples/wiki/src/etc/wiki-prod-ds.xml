<?xml version="1.0" encoding="UTF-8"?>
<datasources>

    <!-- MySQL 5.x -->
    <local-tx-datasource>
        <jndi-name>wikiDatasource</jndi-name>
        <connection-url>jdbc:mysql://localhost/test?characterEncoding=UTF-8</connection-url>
        <driver-class>com.mysql.jdbc.Driver</driver-class>
        <user-name>test</user-name>
        <password></password>

        <min-pool-size>20</min-pool-size>

        <!-- Make sure your MySQL config has that many max_connections!
             This is the max_threads in default Tomcat server.xml on JBoss AS. -->
        <max-pool-size>250</max-pool-size>

        <blocking-timeout-millis>5000</blocking-timeout-millis>
        
        <!-- Needs to be smaller than wait_timeout (which is in seconds) in /etc/my.cnf! -->
        <idle-timeout-minutes>2</idle-timeout-minutes>

        <!-- These are the secret ingredients that make it stable! A simple check-valid-connection-sql won't be enough! -->
        <exception-sorter-class-name>com.mysql.jdbc.integration.jboss.ExtendedMysqlExceptionSorter</exception-sorter-class-name>
        <valid-connection-checker-class-name>com.mysql.jdbc.integration.jboss.MysqlValidConnectionChecker</valid-connection-checker-class-name>

    </local-tx-datasource>

    <!-- PostgreSQL 8.3 TODO: Validate timeout/pool settings!
    <local-tx-datasource>

        <jndi-name>wikiDatasource</jndi-name>
        <connection-url>jdbc:postgresql://localhost/test</connection-url>
        <driver-class>org.postgresql.Driver</driver-class>
        <user-name>postgres</user-name>
        <password>postgres</password>

        <min-pool-size>20</min-pool-size>
        <max-pool-size>250</max-pool-size>

        <blocking-timeout-millis>5000</blocking-timeout-millis>
        <idle-timeout-minutes>2</idle-timeout-minutes>

    </local-tx-datasource>
    -->

</datasources>

