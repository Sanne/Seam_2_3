<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.com/products/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:c="http://java.sun.com/jstl/core"
                xmlns:wiki="http://jboss.com/products/seam/wiki"
                template="themes/#{preferences.get('Wiki').themeName}/#{skin}/template.xhtml">

<ui:define name="screenname">#{documentHome.instance.name}</ui:define>

<ui:define name="control">

    <s:fragment rendered="#{not documentHome.instance.macroPresent('hideControls') or s:hasPermission('User', 'isAdmin', currentUser)}">

        <s:link id="createDoc" styleClass="linkNavigation" view="/docEdit_#{skin}.xhtml"
                accesskey="#{messages['lacewiki.button.CreateDocument.accesskey']}"
                rendered="#{s:hasPermission('Node', 'create', documentHome.instance.parent)}"
                propagation="none">
            <h:outputText escape="false" value="#{messages['lacewiki.button.CreateDocument']}"/>
            <f:param name="documentId" value=""/>
            <f:param name="parentDirectoryId" value="#{documentHome.instance.parent.id}"/>
        </s:link>
        &#160;
        <s:link id="editDoc" styleClass="linkNavigation" view="/docEdit_#{skin}.xhtml"
                accesskey="#{messages['lacewiki.button.EditDocument.accesskey']}"
                rendered="#{s:hasPermission('Node', 'edit', documentHome.instance)}"
                propagation="none">
            <h:outputText escape="false" value="#{messages['lacewiki.button.EditDocument']}"/>
        </s:link>
        &#160;
        <s:link id="showHistory" styleClass="linkNavigation"
                accesskey="#{messages['lacewiki.button.HistoryDocument.accesskey']}"
                view="/docHistory_#{skin}.xhtml"
                rendered="#{documentHome.historicalFilesPresent}"
                propagation="none">
            <h:outputText escape="false" value="#{messages['lacewiki.button.HistoryDocument']}"/>
            <f:param name="fileId" value="#{documentHome.nodeId}"/>
        </s:link>
        &#160;
        <s:link id="browseDir" styleClass="linkNavigation" view="/dirDisplay_#{skin}.xhtml"
                accesskey="#{messages['lacewiki.button.BrowseDirectory.accesskey']}"
                propagation="none">
            <h:outputText escape="false" value="#{messages['lacewiki.button.BrowseDirectory']}"/>
            <f:param name="directoryId" value="#{documentHome.instance.parent.id}"/>
        </s:link>

    </s:fragment>

</ui:define>

<ui:define name="content">

    <s:fragment rendered="#{s:hasPermission('Comment', 'create', documentHome.instance) and commentHome.showForm}">
        <hr/>
        <h3>
            <h:outputText value="#{messages['lacewiki.label.commentForm.PostComment']}:"/>
        </h3>
        <h:form id="commentForm"><s:validateAll>

            <div class="errorMessage"><h:message for="userName"/></div>
            <div>#{messages['lacewiki.label.commentForm.Name']}:&#160;<br/><h:inputText size="30" maxlength="100" required="true" id="userName" value="#{commentHome.instance.fromUserName}"/></div>

            <div class="errorMessage"><h:message for="userEmail"/></div>
            <div>#{messages['lacewiki.label.commentForm.Email']}:&#160;<br/><h:inputText size="30" maxlength="255" required="false" id="userEmail" value="#{commentHome.instance.fromUserEmail}"/></div>

            <div class="errorMessage"><h:message for="userHomepage"/></div>
            <div>#{messages['lacewiki.label.commentForm.Homepage']}:&#160;<br/><h:inputText size="30" maxlength="1000" required="false" id="userHomepage" value="#{commentHome.instance.fromUserHomepage}"/></div>

            <div class="errorMessage"><h:message for="subject"/></div>
            <div>#{messages['lacewiki.label.commentForm.Subject']}:&#160;<br/><h:inputText size="30" maxlength="255" required="true" id="subject" value="#{commentHome.instance.subject}"/></div>

            <div class="errorMessage"><h:message for="comment"/></div>
            <div>
                <h:inputTextarea required="true"
                                 cols="45"
                                 rows="10"
                                 id="comment"
                                 value="#{commentHome.instance.content}"/>
            </div>

            <s:div rendered="#{!identity.loggedIn}">
                <div class="errorMessage"><h:message for="verifyCaptcha"/></div>
                <div>#{messages['lacewiki.label.VerificationQuestion']}:&#160;<br/>
                    <h:panelGroup>
                        <h:inputText size="6" maxlength="6" required="true" id="verifyCaptcha" value="#{captcha.response}"/>
                        <h:graphicImage value="/seam/resource/captcha?nocache=#{wiki:generateRandomNumber()}"/>
                    </h:panelGroup>
                </div>
            </s:div>

            <div class="formControls">
                <h:panelGroup>
                    <h:commandButton action="#{commentHome.persist}" value="#{messages['lacewiki.label.commentForm.PostComment']}"/>
                    <h:commandButton action="#{commentHome.cancel}" immediate="true" value="#{messages['lacewiki.label.Cancel']}"/>
                </h:panelGroup>
            </div>

        </s:validateAll></h:form>
        <hr/>
    </s:fragment>


    <s:div id="documentDisplay" styleClass="documentDisplay">

        <c:if test="#{not empty documentHome.instance.areaNumber}">

            <wiki:formattedText value="#{documentHome.instance.header}"
                                linkStyleClass="regularLink"
                                brokenLinkStyleClass="brokenLink"
                                attachmentLinkStyleClass="regularLink"
                                thumbnailLinkStyleClass="regularLink"
                                linkBaseFile="#{documentHome.instance}"
                                currentAreaNumber="#{documentHome.instance.areaNumber}"
                                enableMacroRendering="true"/>

            <s:div rendered="#{documentHome.instance.nameAsTitle}">
                <h:outputLink value="#{wikiURLRenderer.renderURL(currentDocument)}">
                    <h1 class="documentTitle">#{documentHome.instance.name}</h1>
                </h:outputLink>
            </s:div>

            <c:if test="#{not documentHome.instance.macroPresent('disableContentMarkup')}">
                <wiki:formattedText value="#{wiki:disableFloats(documentHome.instance.content)}"
                                    linkStyleClass="regularLink"
                                    brokenLinkStyleClass="brokenLink"
                                    attachmentLinkStyleClass="regularLink"
                                    thumbnailLinkStyleClass="regularLink"
                                    linkBaseFile="#{documentHome.instance}"
                                    currentAreaNumber="#{documentHome.instance.areaNumber}"
                                    enableMacroRendering="#{not documentHome.instance.macroPresent('disableContentMacros')}"/>
            </c:if>

            <c:if test="#{documentHome.instance.macroPresent('disableContentMarkup')}">
                <s:div styleClass="plaintext">
                    <h:outputText escape="false" value="#{wiki:escapeHTML(documentHome.instance.content, true, true)}"/>
                </s:div>
            </c:if>

            <wiki:formattedText value="#{documentHome.instance.footer}"
                                linkStyleClass="regularLink"
                                brokenLinkStyleClass="brokenLink"
                                attachmentLinkStyleClass="regularLink"
                                thumbnailLinkStyleClass="regularLink"
                                linkBaseFile="#{documentHome.instance}"
                                currentAreaNumber="#{documentHome.instance.areaNumber}"
                                enableMacroRendering="true"/>
        </c:if>

    </s:div>

    <s:div styleClass="box" rendered="#{wiki:sizeOf(attachmentLinksByWikiFile[documentHome.instance.id]) > 0}">

        <h3>
            <h:outputText value="#{messages['lacewiki.label.attachmentDisplay.Attachments']}:"/>
        </h3>

        <h:dataTable value="#{attachmentLinksByWikiFile[documentHome.instance.id]}" var="link"
             id="attachmentTable"
             rowClasses="rowOdd,rowEven">
            <h:column>
                <h:panelGrid columns="3">
                    <s:span><a name="attachment#{uiComponent['attachmentTable'].rowIndex + 1}"/></s:span>
                    <h:outputText value="#&#160;#{uiComponent['attachmentTable'].rowIndex + 1}"/>
                    <h:graphicImage value="#{imagePath}/#{uploadTypes[link.file.contentType].displayIcon}"
                                    rendered="#{not empty uploadTypes[link.file.contentType]}" width="18" height="20"/>
                    <h:graphicImage value="#{imagePath}/#{uploadTypes['generic'].displayIcon}"
                                    rendered="#{empty uploadTypes[link.file.contentType]}" width="18" height="20"/>
                </h:panelGrid>
            </h:column>
            <h:column>
                <h:panelGroup>
                    <h:outputLink value="#{wikiURLRenderer.renderURL(link.file)}">
                        <h:outputText value="#{link.file.name}"/>
                        &#160;
                        <h:outputText value="(#{link.file.filename}, #{wiki:displayFilesize(link.file.filesize)}, #{link.file.contentType})"/>
                    </h:outputLink>
                </h:panelGroup>
            </h:column>
        </h:dataTable>

    </s:div>

    <s:div rendered="#{preferences.get('Wiki').showTags and not documentHome.instance.macroPresent('hideTags') and not empty documentHome.instance.tags}"
           styleClass="smallFont">
        <s:div>
            #{messages['lacewiki.label.docDisplay.Tags']}:&#160;
            <ui:repeat var="tag" value="#{documentHome.tagEditor.tagsAsList}">
                <h:outputLink value="#{wikiURLRenderer.renderTagURL(tag)}">
                    <h:outputText value="#{tag}"/>
                </h:outputLink>
                <h:outputText rendered="#{not wiki:isLastItemInList(documentHome.tagEditor.tagsAsList, tag)}" value="&#160;|&#160;"/>
            </ui:repeat>
        </s:div>
    </s:div>

    <s:div id="commentDisplayForm">
        <c:if test="#{not documentHome.instance.macroPresent('hideComments') and documentHome.instance.enableComments}">

            <s:fragment rendered="#{s:hasPermission('Comment', 'create', documentHome.instance) and not commentHome.showForm}">
                <hr/>
                <s:button action="#{commentHome.newComment()}" value="#{messages['lacewiki.label.commentForm.PostComment']}"/>
                <hr/>
            </s:fragment>

            <s:div styleClass="box" rendered="#{not empty commentQuery.comments}">

                <h3>
                    <h:outputText value="#{commentQuery.comments.size()}&#160;#{messages['lacewiki.label.commentsDisplay.Comment']}:"
                                  rendered="#{commentQuery.comments.size() == 1}"/>
                    <h:outputText value="#{commentQuery.comments.size()}&#160;#{messages['lacewiki.label.commentsDisplay.Comments']}:"
                                  rendered="#{commentQuery.comments.size() > 1}"/>
                </h3>

                <h:panelGrid columns="1" rowClasses="rowOdd, rowEven">

                    <c:forEach var="c" items="#{commentQuery.comments}">

                        <s:div>

                            <a id="comment#{c.id}"/>

                            <s:div rendered="#{currentDocument.name != c.subject}">
                                <h3>
                                    <h:outputLink value="#{wikiURLRenderer.renderURL(c)}">
                                        <h:outputText value="#{c.subject}"/>
                                    </h:outputLink>
                                </h3>
                            </s:div>

                            <s:div styleClass="smallFont">
                                <h:outputText value="#{c.createdOn}">
                                    <f:convertDateTime pattern="dd. MMM yyyy, HH:mm" timeZone="#{preferences.get('Wiki').timeZone}"/>
                                </h:outputText>

                                <s:div rendered="#{c.ownedByRegularUser}">
                                    <h:outputLink value="#{wikiURLRenderer.renderUserProfileURL(c.createdBy)}">
                                        <h:outputText value="#{c.createdBy.fullname}"/>
                                    </h:outputLink>
                                    <s:fragment rendered="#{wiki:showEmailAddress()}">
                                        <br/>
                                        <h:outputLink value="#{wiki:escapeEmailURL(wiki:concat('mailto:', c.createdBy.email))}">
                                            <h:outputText value="#{wiki:escapeAtSymbol(c.createdBy.email)}"/>
                                        </h:outputLink>
                                    </s:fragment>
                                </s:div>

                                <s:div rendered="#{not c.ownedByRegularUser}">
                                    <h:outputText rendered="#{empty c.fromUserHomepage}" value="#{c.fromUserName}"/>
                                    <s:fragment rendered="#{not empty c.fromUserHomepage}">
                                        <a href="#{c.fromUserHomepage}">#{c.fromUserName}</a>
                                    </s:fragment>
                                    <s:fragment rendered="#{not empty c.fromUserEmail}">
                                        <br/>
                                        <h:outputLink value="#{wiki:escapeEmailURL(wiki:concat('mailto:', c.fromUserEmail))}">
                                            <h:outputText value="#{wiki:escapeAtSymbol(c.fromUserEmail)}"/>
                                        </h:outputLink>
                                    </s:fragment>
                                </s:div>
                            </s:div>

                            <s:div rendered="#{c.useWikiText and not empty currentDocument.areaNumber}">
                                <wiki:formattedText value="#{c.content}"
                                                    linkStyleClass="regularLink"
                                                    brokenLinkStyleClass="brokenLink"
                                                    attachmentLinkStyleClass="regularLink"
                                                    thumbnailLinkStyleClass="regularLink"
                                                    linkBaseFile="#{currentDocument}"
                                                    currentAreaNumber="#{currentDocument.areaNumber}"
                                                    enableMacroRendering="false"/>
                            </s:div>
                            <s:div style="margin-top:15px;font-family: Andale Mono, Courier New, monospace;"
                                   rendered="#{not c.useWikiText and currentDocument.name != c.subject}">
                                <h:outputText value="#{wiki:escapeHTML(c.content, true, true)}" escape="false"/>
                            </s:div>
                            <s:div style="font-family: Andale Mono, Courier New, monospace;"
                                   rendered="#{not c.useWikiText and currentDocument.name == c.subject}">
                                <h:outputText value="#{wiki:escapeHTML(c.content, true, true)}" escape="false"/>
                            </s:div>

                            <s:div styleClass="smallFont"
                                   rendered="#{not empty c.createdBy.profile.signature and not empty currentDocument.areaNumber}">
                                <s:div>
                                    <h:outputText value="-- "/>
                                </s:div>
                                <wiki:formattedText value="#{c.createdBy.profile.signature}"
                                                    linkStyleClass="regularLink"
                                                    brokenLinkStyleClass="brokenLink"
                                                    attachmentLinkStyleClass="regularLink"
                                                    thumbnailLinkStyleClass="regularLink"
                                                    linkBaseFile="#{currentDocument}"
                                                    currentAreaNumber="#{currentDocument.areaNumber}"
                                                    enableMacroRendering="false"/>
                            </s:div>

                            <h:form>
                            <h:panelGroup>
                                <s:fragment rendered="#{not commentHome.showForm and s:hasPermission('Comment', 'create', documentHome.instance)}">

                                    <s:button action="#{commentHome.replyTo()}"
                                              value="#{messages['lacewiki.button.commentsDisplay.ReplyTo']}">
                                        <f:param name="parentCommentId" value="#{c.id}"/>
                                    </s:button>

                                    <s:button action="#{commentHome.quote()}"
                                              value="#{messages['lacewiki.button.commentsDisplay.Quote']}">
                                        <f:param name="parentCommentId" value="#{c.id}"/>
                                    </s:button>

                                </s:fragment>

                                 <s:fragment rendered="#{s:hasPermission('Comment', 'delete', currentDocument) and not commentHome.showForm}">

                                     <h:commandButton action="#{commentHome.remove(c.id)}"
                                                      value="#{messages['lacewiki.button.commentsDisplay.RemoveComment']}"/>
                                </s:fragment>
                            </h:panelGroup>
                            </h:form>

                        </s:div>
                    </c:forEach>
                </h:panelGrid>

            </s:div>
        </c:if>
    </s:div>
        

</ui:define>

</ui:composition>
